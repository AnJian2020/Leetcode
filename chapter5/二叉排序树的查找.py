# -*- coding: utf-8 -*- 
# Generated by xuhao on 2020/11/7 22:44

class Node(object):
    def __init__(self,data,leftChild=None,rightChild=None):
        self.data=data
        self.leftChild=leftChild
        self.rightChild=rightChild

class BSTSearch(object):
    """
    二叉排序树的查找
    """

    def searchNoRecursion(self,T:Node,key)->Node:
        """
        非递归
        :param T:
        :param key:
        :return:
        """
        while T!=None and key!=T.data:
            if key<T.data:
                T=T.leftChild
            else:
                T=T.rightChild
        return T

    def searchRecursion(self,T:Node,key):
        """
        递归
        :param T:
        :param key:
        :return:
        """
        if T is None:
            return
        if T.data==key:
            return T
        elif key<T.data:
            BSTSearch().searchRecursion(T.leftChild,key)
        else:
            BSTSearch().searchRecursion(T.rightChild,key)


