# -*- coding: utf-8 -*- 
# Generated by xuhao on 2020/11/7 23:55
from typing import List


class Node(object):
    def __init__(self,data):
        self.data=data
        self.leftChild=None
        self.rightChild=None

class CreatBST(object):

    def creatBST(self,strlist:list)->None:
        root=None
        for i in range(len(strlist)):
            CreatBST().BSTInsert(root,strlist[i])

    def BSTInsert(self,root:Node,key:int)->int:
        if root == None:
            root=Node(data=key)
            root.leftChild=root.rightChild=None
            return 1
        elif key==root.data:
            return 0
        elif key<root.data:
            return CreatBST().BSTInsert(root.leftChild,key)
        else:
            return CreatBST().BSTInsert(root.rightChild,key)



if __name__=="__main__":
    strlist=[45,24,53,45,12,24]
    CreatBST().creatBST(strlist)
